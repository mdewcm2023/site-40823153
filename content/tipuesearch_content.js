var tipuesearch = {"pages": [{'title': '個人簡介', 'text': '四設計四甲 40832153 蕭日傑 \n github: \n   \n \n \n body { background-color: #ffcccc; /* 將背景顏色設為白色 */ } \n', 'tags': '', 'url': '個人簡介.html'}, {'title': '每周進度交代', 'text': '考試網站: \n \xa0 \n \n W1-行前準備 \n W2-下載隨身系統 \n W3-修改SciTE編輯器、將可攜Python更新城第三版本 \n W4-建立HTML的網站，並且利用github進行上傳的動作 \n W5-建立exam.cycu.org的考試帳號、安裝cmsimde的隨身系統，並利用cmsimde的功能去製作網站內容 \n W6-修改網站內容 \n W7-修改網站內容 \n W8-修改網站內容 \n W9-期中考 \n =========================================================== \n W10 \n W11 \n W12 \n W13 \n W14-可攜CAD \n W15-建立雲端動態Repllit並與自己的github作連動 \n W16 \n W17 \n W18-期末考', 'tags': '', 'url': '每周進度交代.html'}, {'title': '建立github pages', 'text': '由於是要建立一個隨身系統，所以要準備一個隨身碟作為可攜環境的裝置 \n 流程： \n \n', 'tags': '', 'url': '建立github pages.html'}, {'title': '注意須知', 'text': '網路： \n 使用IPV4要將strat 更改成IPV4的形式才可進行運作，否則會無法上傳更改好的網際內容及近端內容 \n \n', 'tags': '', 'url': '注意須知.html'}, {'title': '關於機器學習', 'text': '機器學習主要分為監督式學習、非監督式學習和強化學習三種方法。 監督式學習（Supervised Learning）： \n 監督式學習是一種機器學習方法，它的目的是學習從輸入數據中推斷出對應的輸出結果，通常需要使用已知的標籤來進行模型訓練。在監督式學習中，模型需要學習如何從已知的輸入與輸出數據中推斷出一個映射函數，以便於將未知的輸入映射為一個對應的輸出。監督式學習常見的算法包括：線性回歸、邏輯回歸、支持向量機、決策樹、隨機森林、神經網絡等。 非監督式學習（Unsupervised Learning）： \n 非監督式學習是一種機器學習方法，它的目的是從未標記的數據中學習到有意義的結構和模式，從而幫助我們理解數據的特點和分佈情況。在非監督式學習中，模型需要從數據中發現出潛在的規律性，例如聚類、降維、關聯規則挖掘等。非監督式學習常見的算法包括：k-means、層次聚類、主成分分析、獨立成分分析、自編碼器等。 強化學習（Reinforcement Learning）： \n 強化學習是一種機器學習方法，它的目的是學習如何通過與環境的交互來最大化累積回報（reward）。在強化學習中，模型需要通過試錯的方式從與環境的交互中學習到最優的策略，以實現特定的任務。強化學習常見的算法包括：Q-learning、策略梯度、Actor-Critic 等。 \n \n', 'tags': '', 'url': '關於機器學習.html'}, {'title': '1.監督式學習之範例', 'text': '分類問題（Classification）： \n 將輸入數據分為不同的類別。例如，根據一張圖片的像素值判斷這是一張貓還是一張狗的圖片。 迴歸問題（Regression）： \n 預測數值型數據的輸出值。例如，根據一輛車的年齡、里程和品牌等特徵，預測它的價值。 自然語言處理（Natural Language Processing，NLP）： \n 將文本數據分類、翻譯或生成。例如，根據一段文本的內容，判斷它的情感（如正面、負面或中性）。 圖像識別（Image Recognition）： \n 識別圖像中的對象或場景。例如，根據一張街景圖片中的物體和場景，判斷這是哪個城市。 語音識別（Speech Recognition）： \n 將語音信號轉換為文字。例如，根據一段語音，識別語音中的單詞。 這些都是監督式學習的一些常見範例，可以透過訓練模型從輸入數據中學習出一個函數，將未知的輸入映射為一個對應的輸出。 \n', 'tags': '', 'url': '1.監督式學習之範例.html'}, {'title': '2.非監督式學習之範例', 'text': '非監督式學習是一種機器學習方法，其中模型在訓練過程中不使用標籤或預先定義的目標，而是從未標籤的數據中自動學習特徵、結構或模式。以下是一些非監督式學習的範例： 聚類(Clustering)： \n 將一組數據分為幾個不同的群體，每個群體內的數據彼此相似，而群體之間的數據則不同。例如，K-means 聚類演算法可以將一組數據點劃分為 K 個不同的群體。 降維(Dimensionality Reduction)： \n 將高維數據轉換為低維表示，同時保留重要的特徵資訊。例如，主成分分析(PCA)是一種常用的降維方法，可以從高維數據中提取最重要的特徵。 異常偵測(Anomaly Detection)： \n 從數據集中識別異常或不尋常的數據點，這對於檢測潛在的欺詐行為、故障偵測等應用非常有用。例如，孤立森林(Isolation Forest)是一種常用的異常偵測演算法。 生成模型(Generative Models)： \n 生成模型可以從未見過的數據中生成新的樣本，這對於生成新的數據、圖像合成等應用非常有用。例如，變分自編碼器(Variational Autoencoder)和生成對抗網絡(GANs)是常見的生成模型。 視覺識別： \n 在無監督式學習中，可以使用圖像、視頻等數據來進行視覺識別任務，例如圖像分割、物體偵測、圖像生成等。 以上只是非監督式學習的一些範例，實際上還有許多其他應用和方法。非監督式學習在處理未標籤數據、探索數據結構、發現隱藏模式等方面具有廣泛的應用。 \n', 'tags': '', 'url': '2.非監督式學習之範例.html'}, {'title': '3.強化學習之範例', 'text': '遊戲玩家（Game Playing）： \n 強化學習可以被用於訓練遊戲玩家，例如AlphaGo，它能夠通過觀察大量專業棋譜來學習並打敗人類棋手。 機器人控制（Robot Control）： \n 強化學習可以被用於訓練機器人控制策略，例如在機器人足球比賽中訓練一個機器人足球隊的策略。 股票交易（Stock Trading）： \n 強化學習可以被用於訓練股票交易策略，例如透過學習交易策略優化投資組合以最大化獲利。 自然語言處理（Natural Language Processing，NLP）： \n 強化學習可以被用於訓練對話模型，例如訓練一個對話代理人以回答顧客的問題。 自駕車（Self-driving Cars）： \n 強化學習可以被用於訓練自駕車控制策略，例如讓自駕車從一個位置到達另一個位置，並避免與其他車輛碰撞。 這些都是強化學習的一些常見範例，其中每一個都可以被視為一個決策過程，其中代理人試圖通過與環境的交互來學習一個最佳策略。 \n', 'tags': '', 'url': '3.強化學習之範例.html'}, {'title': '機器學習範例影片', 'text': '', 'tags': '', 'url': '機器學習範例影片.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n \n \n', 'tags': '', 'url': 'Brython.html'}, {'title': 'CAD', 'text': '\n Solid Edge Community Edition \n \n Solid Edge Community Edition是Solid Edge CAD軟體的免費版本，具有以下特點： \xa0\xa0\xa0 免費許可證：Solid Edge Community Edition提供免費的許可證，任何人都可以免費下載、安裝和使用該軟體。這使得它成為個人用戶、學生以及小型企業的理想選擇，無需額外的軟體費用。 \xa0\xa0\xa0 完整的CAD功能：Solid Edge Community Edition提供了完整的CAD設計和建模功能。使用者可以進行三維建模、組裝設計、草圖繪製、零件建立等操作，實現產品的設計和開發。 \xa0\xa0\xa0 強大的工具套件：Solid Edge Community Edition配備了一系列強大的工具套件，包括草圖、曲面建模、組裝、製圖、仿真等。使用者可以根據需求進行不同的設計和分析操作，實現全面的產品設計流程。 \xa0\xa0\xa0 雲端協作和共享：Solid Edge Community Edition支援雲端協作和共享功能。使用者可以將設計文件存儲在雲端，方便與團隊成員進行協作和共享，實現即時的設計交流和版本控制。 \xa0\xa0\xa0 學習資源和支援：Solid Edge Community Edition提供了豐富的學習資源和技術支援。使用者可以通過官方網站、社群論壇、教學視頻等途徑獲取相關的教學和技術支援，幫助他們快速上手並解決問題。 \n \n Solvespace \n \n 特色： \xa0\xa0\xa0 參數化建模：Solvespace允許使用者創建參數化的模型，可以使用變數和公式定義模型的尺寸和屬性。這使得在設計過程中進行快速迭代和修改變得更加容易。透過改變參數值，模型可以自動調整並更新。 \xa0\xa0\xa0 幾何約束：Solvespace支援對模型應用幾何約束，例如點到線的垂直、平行關係，或者固定某些點的位置等。這些約束能夠確保模型在設計過程中保持一致性和準確性。 \xa0\xa0\xa0 求解器：Solvespace擁有內置的求解器，能夠自動計算和調整模型中的參數和約束。當使用者修改模型時，求解器會自動重新計算並滿足所設定的約束條件，從而實現模型的自動更新和調整。 \xa0\xa0\xa0 高效的二維繪圖：Solvespace提供了強大的二維繪圖功能，可以創建矢量圖形，包括草圖、斷面圖和裝配圖等。使用者可以輕鬆地將三維模型轉換為二維圖紙，方便進行詳細設計和製圖。 \xa0\xa0\xa0 跨平台支援：Solvespace可在多個平台上運行，包括Windows、macOS和Linux。這使得使用者可以在不同的操作系統上使用同一個軟體，方便協作和共享設計。 \xa0\xa0\xa0 開源和免費：Solvespace是一個開源軟體，使用者可以自由地查看、修改和分發它的原始碼。它也是免費的，任何人都可以免費下載和使用它。 總結來說，Solvespace是一個功能豐富的參數化建模軟體，具有強大的幾何約束和求解功能，並提供高效的二維繪圖工具。它的跨平台支援和開源免費的特性使得它成為一個廣泛應用於CAD設計和工程領域的工具。 \n \n Solid Edge Community Edition和Solvespace是兩個不同的CAD軟體，它們在以下方面存在一些差異： \n \n \xa0\xa0\xa0 授權和定位：Solid Edge Community Edition是Solid Edge軟體的免費版本，主要針對個人用戶、學生和小型企業。它提供了完整的CAD功能和工具，以支援專業的設計和建模需求。 \xa0\xa0\xa0 Solvespace是一個開源軟體，任何人都可以免費下載和使用。它主要針對較為簡單的建模需求，適用於較為基本的設計和製圖工作。 \xa0\xa0\xa0 功能和工具：Solid Edge Community Edition提供了豐富的CAD功能和工具套件，包括三維建模、組裝設計、草圖繪製、製圖、仿真等。它具有強大的建模能力和高效的設計工作流程。 \xa0\xa0\xa0 Solvespace也提供了基本的CAD建模功能，例如草圖繪製、幾何約束和求解器等。它適用於較為簡單的二維和三維建模需求，並且更加注重參數化建模和快速迭代設計。 \xa0\xa0\xa0 使用者支援和資源：Solid Edge Community Edition提供了廣泛的學習資源和技術支援，包括官方文檔、教學視頻、社群論壇等。使用者可以獲得相關的教學和問題解答，以幫助他們更好地使用軟體。 \xa0\xa0\xa0 Solvespace作為一個開源軟體，它也提供了一些社群和論壇，使用者可以在這些平台上尋求幫助和交流。 總結來說，Solid Edge Community Edition和Solvespace在授權、功能和用戶支援等方面存在差異。Solid Edge Community Edition提供了更豐富的CAD功能和專業的支援，適用於對設計和建模有更高要求的用戶。Solvespace則是一個開源的輕量級CAD軟體，適合基本的建模需求和快速迭代設計。', 'tags': '', 'url': 'CAD.html'}, {'title': 'Replit', 'text': '\n 可以使用github或google帳號與Replit做遠端連動 \n \n \n', 'tags': '', 'url': 'Replit.html'}, {'title': '操作說明', 'text': '流程圖 \n 實際說明 \n \n \n \n  editor2 結束 ', 'tags': '', 'url': '操作說明.html'}]};